1. What do you mean by Multithreading? Why it is important?
Ans. Multithreading in Java is a process of executing multiple threads simultaneously.
     Multithreading is important to reduced the execution or response time of the CPU.

2. What are the benefits of using Multithreading?
Ans. Following are the benefits of using Multithreading : 
     1) It doesn't block the user because threads are independent and you can perform multiple operations at the same time.
     2) You can perform many operations together, so it saves time.
     3) Threads are independent, so it doesn't affect other threads if an exception occurs in a single thread.

3. What is Thread in Java?
Ans. Separate flow of execution is called as Thread. It is a light weight subprocess, the smallest unit of processing.

4. What are the two ways of implementing thread in java?
Ans. (i) Extending the Thread class.
     (ii) Implementing the Runnable interface.

5. What's the difference between thread and process?
Ans.  Thread: It simply refers to the smallest units of the particular process. It has the ability to execute different 
      parts (referred to as thread) of the program at the same time.  

      Process: It simply refers to a program that is in execution i.e., an active program. A process can be handled 
      using PCB (Process Control Block).

6. How can we create Daemon thread?
Ans. We can create daemon threads in java using the thread class setDaemon(true). It is used to mark the current thread as 
     daemon thread or user thread. 

7. What are the wait() and sleep() methods?
Ans. wait() : As the name suggests, it is a non-static method that causes the current thread to wait and go to sleep until 
     some other threads call the notify () or notifyAll() method for the objectâ€™s monitor (lock).

     sleep() : If a thread doesn't want to perform any operation for a particular amount of time then we should go to sleep().